express모듈
-http모듈만 사용해서 웹 서버를 구성하면 직접 많은 기능을 개발해야 함
 이 문제를 해결하기 위해 만들어진 모듈이 익스프레스
-익스프레스 모듈을 사용하면 간단한 코드로 웹 서버의 기능을 대부분 구현할 수 있고, 
 미들웨어와 라우터를 사용하여 편리하게 웹 서버 구성가능

 package 설치하기
 npm install 모듈명(npm i 모듈명)
 npm i express 

메소드 (메소드 더 알아보기)
use() : 미들웨어 함수 사용
미들웨어함수 : 서버에 요청한 함수
파라미터 : 변수 /미들웨어 함수가 작동하기 위해서 서버에 값(parameter)을 보내서 요청
get() : get으로 사용자 정보를 전달
set() : 서버 설정을 위한 속성 설정
redirect() : 웹 페이지의 경로를 강제로 이동
send() : 클라이언트에 응답 데이트를 보냄/전달할 수 있는 데이터는 html,buffer,json,json배열..등입니다.
header() : 헤더를 확인

node.js

query : 클라이언트에서 GET방식으로 전송한 요청 파라미터를 확인
body : 클라이언트에서 POST방식으로 전송한 요청 파라미터를 확인
(단, post방식을 통한 요청 파라미터를 확인하려면 body-parser와 같은 모듈을 사용해야 함)

[Nodemon] ->라이브서버
서버 코드를 변경할 때마다 서버를 재시작하도록 하는 모듈
(한번 설치하면 계속 사용 가능)
npm install -g nodemon
-g : 글로벌 설치
npm start라고 실행

package.json에서 설정
"start" : "nodemon express05-1.js"

실행할 때
npm start라고 실행하고


postman 다운로드

REST:
"Representational State Transfer"
자원을 이름으로 구분하여 해당 자원의 상태를 주고받는것

CRUD 연산
CREATE : 생성(POST)
READ : 조회(GET)
UPDATE : 수정(PUT)
DELETE : 삭제(DELETE)

Router 미들웨어
-사용자의 다양한 요청이 들어왔을 때 use() 메소드로 설정한 미들웨어가 항상 호출되는 불편한 점이 있다.
 이를 해결하고자 사용하는 미들웨어가 Router미들웨어

Router 객체 만들기
const 라우터객체 = express.Router();

http://localhost:3000/member/login
라우터객체.route(요청패스).get(실행할 함수);
라우터객체.route(요청패스).post(실행할 함수);

익스프레스에 Router 객체 적용
app.use('/',라우터객체);

템플릿 엔진
-View를 구현하기 위한 템플릿

 html css + php asp java -> 웹개발

MVC
Model View Controller
Model : 데이터베이스
View : 보이는 부분
Controller : 로직(제어)

http://db-engines.com/en/ranking(데이터베이스 순위)


                Model               View         Controller
백엔드 -> 오라클/mysql/mariadb    스트링부트        java
프론트 -> 몽고디비                리액트()         node.js

EJS(Embedded JavaScript) 모듈
EJS 모듈은 템플릿 엔진 모듈
템플릿 엔진 모듈은 특정한 형식인 파일로부터 HTML 페이지를 생성하는 모듈

설치 npm i ejs

EJS 파일 형식의 특수 코드
<% ~~~code~~~ %> : 자바 스크립트 코드를 입력하는 영역
<%= 변수 또는 값 %> : 데이터를 출력
<%-변수또는 객체 %> : ejs 파일 전체를 전달

EJS 데이터를 전달
render(): 


PUG(구 jade)
http://jade-lang.com/

설치
npm i jade 
