Node.js -> javascript가 돌아갈수있는 서버
node환경에 리액트

백엔드 개발자가 사용하는 언어
서버에서 실행되는 자바스크립트
NPM이라는 패키지 -관리자가 포함되어 있음. NPM은 node.js의 프로그램을 설치하고 관리하는데 사용

node.js 버전확인
cmd창에서 node -v 명령어로 확인

npm버전 확인
cmd창에서 npm -v 명렁어로 확인

node port =>3000
서버 : 여러가지 기능을 제공하는 컴퓨터
컴퓨터 -> 각각의 기능을을 수행하는 -> port 

노드 서버 설정
nm init : 옵션을 직접 제공

package.json -모듈을 관리하는 설정파일

노드실행 -> 서버에 요청
node 파일이름(파일이름.js)

서버에 응답
웹브라우저에서 해당되는 127.0.0.1:해당포트(3000)



노드 실행 중지
ctrl+c

 package 설치하기
 npm install 모듈명(npm i 모듈명)
 npm i express

package 복원하기
 npm install

 ----------------------------------------------------------

FileSystem 모듈
파일처리와 관련된 모듈
node.js에서 가장 중요하고 기초가 되는 모듈

동기식 : 프로그램이 동작하는 상태에서 완전히 해당 내용이 끝내고 다음으로 제어를 넘기는 방식 
비동기식 : 동작이 끝나지 않는 상태에서도 제어권을 넘긴 후 프로그램을 계속 진행
javascript -> 비동기식

메소드
readFile() : 파일을 비동기적으로 읽습니다.
readFileSync() : 파일을 동기적으로 읽습니다.
writerFile() : 파일을 비동기적으로 씁니다.
writerFileSync() : 파일을 동기적으로 씁니다.


예외처리
: 프로그램이 실행되고 있는 런타임시에 에러가 발생할 경우 처리할 수 있는 프로그램 구간
 -> if문
 -> try{
     예외 상황이 발생할 수 있는 문장(e)
 } catch(e){
     예외 상황이 발생했을 경우 처리할 문장
 } finally{
     예외 상황이 발생하거나 발생하지 않아도 무조건 실행될 문장(생략가능)
 }

 events
 : 이벤트 위주의 프로그램을 작성할 때 사용하는 모듈

 메소드
 on() : 지정한 이벤트의 리스너를 추가
 once() : 지정한 이벤트의 리스너를 추가하지만 한번 실행 이후 자동 제거
 removelistener() : 지정한 이벤트에 대한 리스너를 제거
 emit() : 지정한 이벤트를 발생

 시스템 이벤트
 process 객체 : 노드에서 항상 사용할 수 있는 객체
 on() 과 emit() 메소드는 객체를 생성하거나 모듈을 가져오지 않아도 바로 사용할 수 있음
 on() 메소드를 호출하면서 이벤트 이름을 exit로 지정하면 내부적으로 프로세스가 끝날 때를 알 수 있음

 http/express 모듈
 http : 내부모듈 / express : 외부모듈

 <http모듈>
 : node.js에서 가장 기본적이고 중요한 서버 모듈
 : HTTP 웹 서버를 생성하는 것과 관련된 모든 기능을 담당

 1.server객체
 http 모듈의 createServer() 메소드를 사용하여 server객체를 생성

 메소드
 listen() : 서버를 실행하고 클라이언트를 기다림
 close() : 서버를 종료

 이벤트
 request : 클라이언트가 서버에 요청할 때 발생하는 이벤트
 connection : 클라이언트가 접속할 때 발생하는 이벤트
 close : 서버가 종료될 때 발생하는 이벤트

 2.request객체
 클라이언트가 서버에게 전달하는 메세지(정보)를 담는 객체/요청하는 수단

 속성
 method : 클라이언트 요청 방식을 나타냄 (GET,POST)
  GET : 주소창에 입력해서 요청
  POST : body 안에서 form문 method post 요청
 url : 클라이언트가 요청한 URL을 나타냄

 3.response객체
 서버에서 클라이언트로 응답 메세지를 전송시켜주는 객체

 메소드
 writeHead() : 응답 헤더를 작성
 end() : 응답 본문을 작성

 MIME 형식
 text/plain : 일반적은 text 파일
 text/html : html 형식 파일
 text/css : css 형식 파일
 text/xml : xml 형식 파일
 image/jpeg : jpeg 이미지 파일
 image/png : png 이미지 파일
 video/mpeg : mpeg 동영상 파일
 audio/mp3 : mp3 음악 파일

 <express 모듈>
 http 모듈만 사용해서 웹 서버를 구성하면 직접 많은 기능을 개발해야 함
 이 문제를 해결하기 위해 만들어진 모듈이 익스프레스
 익스프레소 모듈을 사용하면 간단한 코드로 웹 서버의 기능을 대부분 구현할 수 있고,
 미들웨어와 라우터를 사용하여 편리하게 웹 서버를 구성할 수 있음

 메소드
 use() : 미들웨어 함수를 사용
 get() : get으로 사용자 정보를 전달 받음
 set() : 서버 설정을 위한 속성을 설정
 redirect() : 웹 페이지의 경로를 강제로 이동
 send() : 클라이언트에 응답 데이터를 보냄. 전달할 수 있는 데이터는 html,buffer,json 배열 ..등
 header() : 헤더를 확인










